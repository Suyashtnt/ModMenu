# This workflow will build a Java project with Gradle	
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle	

name: Java CI with Gradle	

on:
  repository_dispatch:
    types: [run_tests]

jobs:	
  build:	

    runs-on: ubuntu-latest	

    steps:	
    - uses: travisj/build-number-action@v1
      id: my-project-build-number
    - uses: actions/checkout@v2	
      

        
    - name: Set up JDK 1.8	
      uses: actions/setup-java@v1	
      with:	
        java-version: 1.8	
    
    - name: Echo file name
      run: echo  build/libs/ModMenu-${{ steps.my-project-build-number.outputs.build-number }}.jar
      env:
        BUILD_NUMBER: ${{ steps.my-project-build-number.outputs.build-number }}
          
    - name: Grant execute permission for gradlew	
      run: chmod +x gradlew	
      
    - name: Build with Gradle	
      run: ./gradlew build
      
    - name: rename file
      env:
        TIME: "${{ steps.current-time.outputs.formattedTime }}"
      run: mv build/libs/modid-1.0.jar build/libs/ModMenu-${{ steps.my-project-build-number.outputs.build-number }}.jar
      
    - name: Upload a Build Artifact	
      uses: actions/upload-artifact@v2.0.1
      env:
        TIME: ${{ steps.current-time.outputs.time }}
      with:	
        # Artifact name	
        name: ModMenu
        # A file, directory or wildcard pattern that describes what to upload	
        path: build/libs/ModMenu-${{ steps.my-project-build-number.outputs.build-number }}.jar 

  uploadToCurseforge:
    
    name: upload to curseforge
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
    
     - uses: actions/download-artifact@v2
       with:
         path: build/libs
        
     - name: Upload to curseforge		
       uses: itsmeow/curseforge-upload@master		
       with:		
        token: ${{ secrets.CF_API_KEY }}		
        project_id: ${{ secrets.CF_PROJECTID}}			
        game_endpoint: minecraft		
        file_path: build/libs/ModMenu-${{ steps.my-project-build-number.outputs.build-number }}.jar		
        changelog: Creator still needs to make one :\	
        display_name: ModMenu-build-${{ steps.my-project-build-number.outputs.build-number }}		
        game_versions: 1.15.2,Java 8,Fabric		
        release_type: alpha	
        
  UploadToGVR:
    
    name: create release
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      
    - uses: actions/download-artifact@v2
      with:
         path: build/libs
         
    - name: Create a Release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag-name: ${{ steps.my-project-build-number.outputs.build-number }}
        release_name: ModMenu-${{ steps.my-project-build-number.outputs.build-number }}
        prerelease: true
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: build/libs/
        asset_name: ModMenu-${{ steps.my-project-build-number.outputs.build-number }}.jar
        asset_content_type: application/zip
